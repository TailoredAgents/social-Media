name: Code Quality

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  frontend-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install frontend dependencies
      run: npm ci
      working-directory: frontend
      
    - name: Run ESLint with detailed output
      run: |
        npm run lint -- --format=compact --output-file=eslint-report.txt
        cat eslint-report.txt
      working-directory: frontend
      continue-on-error: true
      
    - name: Run Prettier check
      run: npm run format:check
      working-directory: frontend
      
    - name: Upload ESLint report
      uses: actions/upload-artifact@v4
      with:
        name: eslint-report
        path: frontend/eslint-report.txt
        retention-days: 30
      
  backend-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort mypy
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Run Black formatter check
      run: black --check --diff .
      continue-on-error: true
      
    - name: Run isort import check
      run: isort --check-only --diff .
      continue-on-error: true
      
    - name: Run flake8 linting
      run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      continue-on-error: true
      
    - name: Run mypy type checking
      run: mypy backend/ --ignore-missing-imports
      continue-on-error: true